% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/RcppExports.R
\name{gen_hypergeo}
\alias{gen_hypergeo}
\title{Generalized hypergeometric function}
\usage{
gen_hypergeo(U, L, x, tol, max_iter, prec, check_mode, log)
}
\arguments{
\item{U, L}{Numeric vectors for upper and lower values.}

\item{x}{Numeric (1L) as common ratio.}

\item{tol}{\code{NULL} or Numeric (1L) as convergence tolerance.
If \code{NULL}, use the epsilon for the \code{value_type} determined by
\code{boost::math::tools::promote_args} (e.g. for \code{double} input,
usually use the epsilon for \code{long double}).}

\item{max_iter}{Integer (1L) as iteration limit.}

\item{prec}{Numeric (1L) as precision level during computation,
a.k.a the number of precise digits defined in \code{boost::multiprecision::cpp_bin_float}.
For level 0, \code{double} precision is used. For level 20, the precision is slightly
higher than \code{long double}
(\code{.Machine[["longdouble.eps"]] = 1.084202e-19}).
Higher levels include 25/30/35/.../50. The higher the accuracy,
the slower the computation. For an input other than these values, the lowest level
greater than the input is used, up to 50.}

\item{check_mode}{Logical (1L) indicating whether the mode of \code{x}
should be checked for obvious convergence failures.}

\item{log}{Logical (1L) indicating whether result is given as log(result).}
}
\value{
Numeric (1L) as the result of computation (at \code{double} precision).
Warnings are issued if failing to converge.
}
\description{
\code{gen_hypergeo} computes generalized hypergeometric function.
}
\note{
Change log:
\itemize{
\item{0.1.0 Xiurui Zhu - Initiate the function.}
\item{0.1.1 Xiurui Zhu - Use \code{boost} for higher accuracy.}
}
}
\examples{
gen_hypergeo(U = c(1.1, 0.2, 0.3), L = c(10.1, 4 * pi), x = 1,
             tol = NULL, max_iter = 10000L, prec = 20, check_mode = TRUE, log = FALSE)
}
\author{
Xiurui Zhu
}
